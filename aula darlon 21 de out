public class Ordenacao{
    public static int[] merge(int[] va, int[] vb){
        int[] vc;
        int i=0, j=0,k=0, tam;

        tam = va.length+vb.length;

        vc = new int[tam];

        if(va.length == 0) return vb;
        if(vb.length == 0) return va;

        while(k<tam){
            if(i < va.length && j < vb.length){
                if(va[i]<=vb[j]){
                    vc[k] = va[i];
                    i++;
                }else{
                    vc[k] = vb[j];
                    j++;
                }
            }else{
                if(i>=va.length){
                    vc[k] = vb[j];
                    j++;
                }else{
                    vc[k] = va[i];
                    i++;
                }
            }
            k++;
        }

        return vc;
    }

    public static int[] mergeSort(int[] v){
        int[] vr, ve, vd;
        int meio;

        if(v.length < 2){
            return v;
        }

        meio = v.length / 2;
        ve = vetor_sub(v, ini:0, meio);
        vd = vetor_sub(v, meio, v.length);

        vr = merge(mergeSort(ve), mergeSort(vd));


        return vr;
    }

    public static int vetor_sub(int[] v, ini, fim){//como fazer pra apresentar somente uma parte de um vetor apresentando inicio e fim
        int i, k=0;

        int[] vr = new int[fim-ini];

        for(i=ini;i<fim;i++){
            vr[k] = v[i];
            k++;
        }
        return vr;
    }

    // public static void main(String[] args){
    //     int i;
    //     int[] v1= {5,7,9,11, 13, 15};
    //     // int[] v1= {5,7,9,11};
    //     // int[] v2= {6,10,12,15};

    //     // int[] res = merge{v1, v2};
    //     int[] res = vetor_sub(v1, ini:3, fim:5);
    //     for(i=0;i<res.length;i++){
    //         System.out.prinf("%d ", res[i]);
    //     }
    //     System.out.println();
    // }
    public static void main(String[] args){
        int i;
        // int[] v1= {5,7,9,11, 13, 15, 17, 19, 21};
        int[] v1 = {42, 13, 27, 2, 55, 22, 94, 1, 200, 0, 300};
        int[] vr = mergeSort[v1];

        for(i=0;i<vr.length;i++){
            System.out.printf("%d ", vr[i]);
        }
        System.out.println();

    }
}
